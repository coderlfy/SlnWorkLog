<Controls:MetroWindow x:Class="ExamSystemConfig.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:System="clr-namespace:System;assembly=mscorlib" Title=""
        xmlns:local="clr-namespace:ExamSystemConfig"
        Height="600" Width="1024" WindowStartupLocation="CenterScreen" TitleForeground="#999988">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro.Resources;component/Icons.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colours.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/VS/Colours.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/VS/Styles.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <local:QuestionTypeConverter x:Key="questionTypeConverter" />
            <local:QuestionScopeConverter x:Key="questionScopeConverter" />
            <local:DateTimeConverter x:Key="datetimeConverter" />
            <Style x:Key="ComboBoxStyle1" TargetType="{x:Type ComboBox}">
                <Setter Property="MinHeight" Value="26"/>
                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource Gray7}"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                <Setter Property="FontFamily" Value="{DynamicResource ContentFontFamily}"/>
                <Setter Property="FontSize" Value="{DynamicResource ContentFontSize}"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBox}">
                            <Grid>
                                <Grid.Resources>
                                    <Style x:Key="comboToggleStyle" TargetType="{x:Type ToggleButton}">
                                        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                        <Setter Property="Background" Value="{DynamicResource GrayBrush7}"/>
                                        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                        <Setter Property="BorderThickness" Value="1"/>
                                        <Setter Property="Padding" Value="3"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                    <Grid>
                                                        <VisualStateManager.VisualStateGroups>
                                                            <VisualStateGroup x:Name="CommonStates">
                                                                <VisualState x:Name="Normal"/>
                                                                <VisualState x:Name="MouseOver">
                                                                    <Storyboard>
                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MouseOverBorder">
                                                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                                        </DoubleAnimationUsingKeyFrames>
                                                                    </Storyboard>
                                                                </VisualState>
                                                                <VisualState x:Name="Pressed">
                                                                    <Storyboard>
                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressedBorder">
                                                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                                        </DoubleAnimationUsingKeyFrames>
                                                                    </Storyboard>
                                                                </VisualState>
                                                                <VisualState x:Name="Disabled"/>
                                                            </VisualStateGroup>
                                                            <VisualStateGroup x:Name="CheckStates">
                                                                <VisualState x:Name="Checked">
                                                                    <Storyboard>
                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckedRectangle">
                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                                                                        </DoubleAnimationUsingKeyFrames>
                                                                    </Storyboard>
                                                                </VisualState>
                                                                <VisualState x:Name="Unchecked"/>
                                                            </VisualStateGroup>
                                                            <VisualStateGroup x:Name="FocusStates">
                                                                <VisualState x:Name="Focused">
                                                                    <Storyboard>
                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusRectangle">
                                                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                                        </DoubleAnimationUsingKeyFrames>
                                                                    </Storyboard>
                                                                </VisualState>
                                                                <VisualState x:Name="Unfocused"/>
                                                            </VisualStateGroup>
                                                        </VisualStateManager.VisualStateGroups>
                                                        <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
                                                        <Rectangle x:Name="DisabledVisualElement" Fill="{DynamicResource WhiteBrush}" IsHitTestVisible="False" Opacity="0"/>
                                                        <Border x:Name="MouseOverBorder" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource GrayBrush8}" Opacity="0"/>
                                                        <Border x:Name="PressedBorder" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource GrayBrush5}" Opacity="0"/>
                                                        <Rectangle x:Name="FocusRectangle" Opacity="0" Stroke="{DynamicResource TextBoxMouseOverInnerBorderBrush}"/>
                                                        <Rectangle x:Name="CheckedRectangle" Opacity="0" Stroke="{DynamicResource TextBoxMouseOverBorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}"/>
                                                        <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="False" Margin="1" Stroke="{DynamicResource HighlightBrush}" StrokeThickness="1" Visibility="Collapsed"/>
                                                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                    </Grid>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Grid.Resources>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal"/>
                                        <VisualState x:Name="MouseOver"/>
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledVisualElement">
                                                    <SplineDoubleKeyFrame KeyTime="0" Value="0.45"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="FocusStates">
                                        <VisualState x:Name="Focused">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusRectangle">
                                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Unfocused"/>
                                        <VisualState x:Name="FocusedDropDown">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PopupBorder">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <Visibility>Visible</Visibility>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="ValidationStates">
                                        <VisualState x:Name="Valid"/>
                                        <VisualState x:Name="InvalidUnfocused">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <Visibility>Visible</Visibility>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="InvalidFocused">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <Visibility>Visible</Visibility>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <System:Boolean>True</System:Boolean>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Border x:Name="ContentPresenterBorder">
                                    <Grid>
                                        <ToggleButton x:Name="DropDownToggle" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Right" IsTabStop="False" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="0" Style="{DynamicResource comboToggleStyle}" VerticalAlignment="Stretch">
                                            <Path x:Name="BtnArrow" Data="F1M301.14,-189.041L311.57,-189.041 306.355,-182.942 301.14,-189.041z" HorizontalAlignment="Right" Height="4" Margin="0,0,6,0" Stretch="Uniform" Width="8">
                                                <Path.Fill>
                                                    <SolidColorBrush Color="{DynamicResource Gray3}"/>
                                                </Path.Fill>
                                            </Path>
                                        </ToggleButton>
                                        <Border x:Name="EditableTextBoxBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,0,1" Background="{DynamicResource ControlBackgroundBrush}" HorizontalAlignment="Stretch" Margin="0,0,23,0" Visibility="Collapsed" VerticalAlignment="Stretch">
                                            <TextBox x:Name="PART_EditableTextBox" BorderThickness="0" Background="{x:Null}" Foreground="{TemplateBinding Foreground}" Focusable="True" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalAlignment="Stretch" IsReadOnly="{TemplateBinding IsReadOnly}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Controls:TextboxHelper.Watermark="{TemplateBinding Controls:TextboxHelper.Watermark}"/>
                                        </Border>
                                        <Grid Margin="4,0,16,0">
                                            <ContentPresenter x:Name="ContentSite" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Grid>
                                    </Grid>
                                </Border>
                                <Rectangle x:Name="FocusRectangle" Opacity="0" Stroke="{DynamicResource TextBoxMouseOverInnerBorderBrush}"/>
                                <Rectangle x:Name="DisabledVisualElement" Fill="{DynamicResource DisabledWhiteColorBrush}" IsHitTestVisible="False" Opacity="0"/>
                                <Border x:Name="ValidationErrorElement" BorderBrush="{DynamicResource ControlsValidationBrush}" BorderThickness="1" Visibility="Collapsed">
                                    <Border.ToolTip>
                                        <ToolTip x:Name="validationTooltip" Placement="Right" Template="{DynamicResource ValidationToolTipTemplate}">
                                            <ToolTip.Triggers>
                                                <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible">
                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                    <DiscreteObjectKeyFrame.Value>
                                                                        <System:Boolean>True</System:Boolean>
                                                                    </DiscreteObjectKeyFrame.Value>
                                                                </DiscreteObjectKeyFrame>
                                                            </ObjectAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </ToolTip.Triggers>
                                        </ToolTip>
                                    </Border.ToolTip>
                                    <Grid Background="Transparent" HorizontalAlignment="Right" Height="12" Margin="1,-4,-4,0" VerticalAlignment="Top" Width="12">
                                        <Path Data="M1,0L6,0A2,2,90,0,1,8,2L8,7z" Fill="{DynamicResource ValidationBrush5}" Margin="1,3,0,0"/>
                                        <Path Data="M0,0L2,0 8,6 8,8" Fill="{DynamicResource WhiteColorBrush}" Margin="1,3,0,0"/>
                                    </Grid>
                                </Border>
                                <Popup x:Name="PART_Popup" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" MaxHeight="{Binding MaxDropDownHeight, RelativeSource={RelativeSource TemplatedParent}}" MinWidth="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                    <Border x:Name="PopupBorder" BorderBrush="{DynamicResource ComboBoxPopupBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource WhiteBrush}" Effect="{DynamicResource DropShadowBrush}" HorizontalAlignment="Stretch" Height="Auto">
                                        <ScrollViewer x:Name="DropDownScrollViewer" BorderThickness="0" Margin="2" Padding="1">
                                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                        </ScrollViewer>
                                    </Border>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEditable" Value="True">
                                    <Setter Property="IsTabStop" Value="False"/>
                                    <Setter Property="Visibility" TargetName="EditableTextBoxBorder" Value="Visible"/>
                                    <Setter Property="Visibility" TargetName="ContentSite" Value="Hidden"/>
                                    <Setter Property="Focusable" TargetName="DropDownToggle" Value="False"/>
                                    <Setter Property="HorizontalAlignment" TargetName="DropDownToggle" Value="Right"/>
                                    <Setter Property="Background" TargetName="DropDownToggle" Value="Transparent"/>
                                    <Setter Property="Width" TargetName="DropDownToggle" Value="23"/>
                                    <Setter Property="BorderThickness" TargetName="DropDownToggle" Value="0,1,1,1"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <DockPanel>
        <TextBlock DockPanel.Dock="Left" Foreground="{StaticResource Foreground}" Margin="5" VerticalAlignment="Center">
            <TextBlock.LayoutTransform>
                <RotateTransform Angle="90"/>
            </TextBlock.LayoutTransform>
            功能区（可直接点击选单进行功能切换）
        </TextBlock>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="300"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <TabControl Margin="0,20,0,20" x:Name="tcMainWindowTab" Grid.RowSpan="2">
                <TabItem Header="首页">
                    <Grid Margin="50">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="50"/>
                            <RowDefinition Height="25"/>
                            <RowDefinition Height="25"/>
                            <RowDefinition Height="25"/>
                            <RowDefinition/>
                            <RowDefinition Height="25"/>
                            <RowDefinition Height="25"/>
                            <RowDefinition Height="25"/>
                            <RowDefinition Height="25"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="2*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock FontSize="24" Grid.Row="0" Foreground="{StaticResource Foreground}" x:Name="tbAppName" Grid.ColumnSpan="3"/>
                        <Separator Grid.Row="1" Grid.ColumnSpan="2" Margin="5"/>
                        <TextBlock FontSize="14" Grid.Row="2" Foreground="{StaticResource Foreground}">程序发起时间：</TextBlock>
                        <TextBlock FontSize="14" Grid.Row="2" Foreground="{StaticResource Foreground}" Grid.Column="1" x:Name="tbDevStartDate"/>
                        <TextBlock FontSize="14" Grid.Row="3" Foreground="{StaticResource Foreground}">版本：</TextBlock>
                        <TextBlock FontSize="14" Grid.Row="3" Foreground="{StaticResource Foreground}" Grid.Column="1" x:Name="tbAppVersion"/>
                        <TextBlock FontSize="14" Grid.Row="4" Foreground="{StaticResource Foreground}">本程序功能介绍：</TextBlock>
                        <TextBlock FontSize="14" Grid.Row="4" Foreground="{StaticResource Foreground}" TextWrapping="Wrap" Grid.Column="1" x:Name="tbAboutSoftware"/>
                        <Separator Grid.Row="5" Grid.ColumnSpan="2" Margin="5"/>
                        <TextBlock FontSize="14" Grid.Row="6" Foreground="{StaticResource Foreground}">开发负责人：</TextBlock>
                        <TextBlock FontSize="14" Grid.Row="6" Foreground="{StaticResource BackgroundSelected}" x:Name="tbDeveloper" Grid.Column="1"/>
                        <TextBlock FontSize="14" Grid.Row="7" Foreground="{StaticResource Foreground}">开发单位：</TextBlock>
                        <TextBlock FontSize="14" Grid.Row="7" Foreground="{StaticResource Foreground}" x:Name="tbDevCompany" Grid.Column="1"/>
                        <TextBlock FontSize="14" Grid.Row="8" Foreground="{StaticResource Foreground}">客服电话：</TextBlock>
                        <TextBlock FontSize="14" Grid.Row="8" Foreground="{StaticResource Foreground}" Grid.Column="1" x:Name="tbHelpTelephone"/>
                    </Grid>
                </TabItem>
                <TabItem Header="试题管理">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="50"/>
                            <RowDefinition/>
                            <RowDefinition Height="50"/>
                        </Grid.RowDefinitions>
                        <StackPanel Orientation="Horizontal" DockPanel.Dock="Bottom">
                            <TextBlock Margin="10,15,0,15" FontSize="14" Foreground="{StaticResource Foreground}" Text="试题类型："/>
                            <ComboBox Width="100" x:Name="cbQuestiontype" Margin="10" Height="26" />
                            <TextBlock Margin="10,15,0,15" FontSize="14" Foreground="{StaticResource Foreground}" Text="试题领域："/>
                            <ComboBox Width="100" Margin="10" x:Name="cbQuestionScope" Height="26" />
                            <TextBlock Margin="10,15,0,15" FontSize="14" Foreground="{StaticResource Foreground}" Text="问题内容关键字："/>
                            <TextBox Width="100" Margin="10" Height="26" x:Name="tbQuestionTitleKey" />
                            <Button Width="50"
                                    Height="50"
                                    Margin="0, 0, 0, 0" Click="tbarQueryQuestion"
                                    Style="{DynamicResource MetroCircleButtonStyle}">
                                <Rectangle Width="20" Height="20">
                                    <Rectangle.Fill>
                                        <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_magnify}" />
                                    </Rectangle.Fill>
                                </Rectangle>
                            </Button>
                        </StackPanel>
                        <DataGrid Grid.Row="1" x:Name="dgQuestion" AutoGenerateColumns="False" SelectionMode="Single" IsReadOnly="True">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="编号" Binding="{Binding questionId}" Width="60" />
                                <DataGridTextColumn Header="问题内容" Binding="{Binding questionName}" Width="2*" />
                                <DataGridTextColumn Header="试题领域" Binding="{Binding questionScopeId, Converter={StaticResource questionScopeConverter}}" Width="150" />
                                <DataGridTextColumn Header="试题类型" Binding="{Binding questionTypeId, Converter={StaticResource questionTypeConverter}}" Width="100" />
                                <DataGridTextColumn Header="录入时间" Binding="{Binding writeTime, Converter={StaticResource datetimeConverter}}" Width="160" />
                            </DataGrid.Columns>
                        </DataGrid>
                        <StackPanel Grid.Row="2" Orientation="Horizontal" DockPanel.Dock="Bottom">
                            <Button Margin="10" Height="26" Click="showAddNewQuestion" Width="120">新增试题</Button>
                            <Button Margin="10" Height="26" Width="120" Click="showEditQuestion">编辑所选</Button>
                            <Button Margin="10" Height="26" Width="120">删除所选</Button>
                        </StackPanel>
                    </Grid>
                </TabItem>

            </TabControl>
            <StackPanel Grid.Column="1" Margin="10,25,25,0">
                <TextBlock Margin="0,10,0,10" FontSize="18" Foreground="{StaticResource Foreground}" Text="常用功能"/>
                <Separator Background="#11FFFFFF"/>
                <Button FontSize="14" Margin="0,10,0,5" Content="首页" Click="btnShowTabQuestion" Style="{StaticResource LinkButton}"/>
                <Button FontSize="14" Margin="0,5,0,5" Content="配置数据库" Click="setDBConnectConfig" Style="{StaticResource LinkButton}"/>
                <Button FontSize="14" Margin="0,5,0,5" Content="添加试题" Click="addQuestion" Style="{StaticResource LinkButton}"/>
                <Button FontSize="14" Margin="0,5,0,5" Content="查询试题" Click="queryQuestion" Style="{StaticResource LinkButton}"/>
                <Button FontSize="14" Margin="0,5,0,5" Content="考题模版" Style="{StaticResource LinkButton}"/>
                <Button FontSize="14" Margin="0,5,0,10" Content="生成考卷/查询考卷" Style="{StaticResource LinkButton}"/>
                <TextBlock Margin="0,10,0,10" FontSize="18" Foreground="{StaticResource Foreground}" Text="程序状态"/>
                <Separator Background="#11FFFFFF"/>
                <Button FontSize="14" Margin="0,10,0,5" x:Name="btnConnectDBState" Click="resetConnectDB" Content="数据库连接状态：正常" Style="{StaticResource LinkButton}"/>
                <Button FontSize="14" Margin="0,5,0,5" Content="近期错误日志：2013-10-29" Style="{StaticResource LinkButton}"/>
                <Button FontSize="14" Margin="0,5,0,10" x:Name="btnQuerySpan" Content="上次查询时长：0ms" Style="{StaticResource LinkButton}"/>
            </StackPanel>
            <StackPanel Grid.Row="1" Height="100" Grid.Column="1">
                <Controls:ProgressRing HorizontalAlignment="Center" x:Name="ctlProgress" IsActive="False" />
            </StackPanel>

        </Grid>
    </DockPanel>
</Controls:MetroWindow>